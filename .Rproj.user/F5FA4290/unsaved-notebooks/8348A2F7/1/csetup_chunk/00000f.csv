"0","# =============== Setup: packages, data load, cleaning ==============="
"0",""
"0","#Install/load packages"
"0","pkgs <- c("
"0","  ""tidyverse"",""lubridate"",""janitor"",""here"",""scales"","
"0","  ""flexdashboard"",""plotly"",""DT"", ""shiny"""
"0",")"
"0","new <- pkgs[!pkgs %in% rownames(installed.packages())]"
"0","if (length(new)) install.packages(new, quiet = TRUE)"
"0","invisible(lapply(pkgs, library, character.only = TRUE))"
"0",""
"0","#Path to CSV Data"
"0","data_path <- here::here(""data"",""Superstore.csv"")"
"0","if (!file.exists(data_path)) {"
"0","  stop(""Data not found at: "", data_path,"
"0","       ""\nPut the Superstore CSV there and re-run the dashboard."")"
"0","}"
"0",""
"0","#Load raw data, standardize column names, fix any invalid UTF-8 chars"
"0","raw <- readr::read_csv("
"0","  file = data_path,"
"0","  guess_max = 200000,"
"0","  locale    = readr::locale(encoding = ""UTF-8"")"
"0",") |>"
"0","  janitor::clean_names() |>"
"0","  dplyr::mutate(across(where(is.character), ~ iconv(.x, from = """", to = ""UTF-8"", sub = """")))"
"0",""
"0","#Clean & feature engineering"
"0","needed <- c(""order_date"",""ship_date"",""sales"",""profit"",""discount"",""quantity"",""region"",""category"")"
"0","missing <- setdiff(needed, names(raw))"
"0","if (length(missing)) stop(""Missing columns in data: "", paste(missing, collapse = "", ""))"
"0",""
"0","retail <- raw |>"
"0","  dplyr::mutate("
"0","    order_date    = suppressWarnings(lubridate::mdy(order_date)),"
"0","    ship_date     = suppressWarnings(lubridate::mdy(ship_date)),"
"0","    year_month    = lubridate::floor_date(order_date, ""month""),"
"0","    profit_margin = dplyr::if_else(sales > 0, profit / sales, NA_real_),"
"0","    discount_bucket = cut("
"0","      discount,"
"0","      breaks = c(-Inf, 0, .1, .2, .3, .4, Inf),"
"0","      labels = c(""0"",""0–10%"",""10–20%"",""20–30%"",""30–40%"",""40%+""),"
"0","      right = TRUE"
"0","    )"
"0","  ) |>"
"0","  dplyr::filter(!is.na(order_date), sales >= 0, quantity > 0) |>"
"0","  dplyr::mutate(across(where(is.character), trimws))"
"0",""
"0","stopifnot(nrow(retail) > 0)"
"0",""
"0","#Dropdown choices"
"0","regions    <- sort(unique(retail$region))"
"0","categories <- sort(unique(retail$category))"
"0",""
"0","#KPI helper"
"0","kpi_cards <- function(df) {"
"0","  tibble::tibble("
"0","    total_sales  = sum(df$sales,  na.rm = TRUE),"
"0","    total_profit = sum(df$profit, na.rm = TRUE),"
"0","    margin       = ifelse(sum(df$sales, na.rm=TRUE) > 0,"
"0","                          sum(df$profit, na.rm=TRUE)/sum(df$sales, na.rm=TRUE),"
"0","                          NA_real_)"
"0","  )"
"0","}"
"0",""
